#!/usr/bin/env ruby

CONSOLE_USER_FILE = "tmp/.console-user"
ENVIRONMENTS = {
  %w[prod production] => :production,
  %w[dev development] => :development,
}
environment = ENVIRONMENTS.find { |k, _| k.include? ARGV[0] }&.last || :development

def console_user
  ask_for_console_user while (user = read_console_user).to_s.empty?
  user
end

def ask_for_console_user
  print "To access the production console, enter your name: "
  File.write(CONSOLE_USER_FILE, STDIN.gets.chomp)
end

def read_console_user
  File.read(CONSOLE_USER_FILE).strip if File.exist?(CONSOLE_USER_FILE)
end

def escape_str(string)
  string.gsub("\"", "\\\"")
end

def kamal_exec(cmd)
  exec "bundle exec kamal app exec --reuse -i \"#{cmd.gsub("\"", "\\\"")}\""
end

if environment == :production
  begin
    puts "‚ùó ARE YOU SURE YOU WANT TO ACCESS THE **REAL** PRODUCTION CONSOLE?"
    print "Type \"real prod\" to confirm: "
    confirmed = STDIN.gets&.chomp == "real prod" # `gets` may raise Interrupt

    raise Interrupt unless confirmed
    user = console_user
    puts # blank line to separate from Kamal output

    kamal_exec "env CONSOLE_USER=\"#{user}\" bin/rails console"
  rescue Interrupt
    puts "\nphew! you're safe üòÖ"
  end
else
  exec "bin/rails console"
end
