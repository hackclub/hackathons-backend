#!/usr/bin/env ruby

require "bundler/inline"

# true = install gems so this is fast on repeat invocations
gemfile(true, quiet: true) do
  source "https://rubygems.org"

  gem "benchmark"
end

hosts = ENV["MRSK_HOSTS"].split(",")
results = nil
MAX_ATTEMPTS = 3

elapsed = Benchmark.realtime do
  results = hosts.map do |host|
    Thread.new do
      attempts = 1

      begin
        Socket.getaddrinfo(host, 0, Socket::AF_UNSPEC, Socket::SOCK_STREAM, nil, Socket::AI_CANONNAME)
      rescue SocketError
        if attempts < MAX_ATTEMPTS
          puts "Retrying DNS warmup: #{host}"
          attempts += 1
          sleep rand
          retry
        else
          puts "DNS warmup failed: #{host}"
          host
        end
      end

      attempts
    end
  end.map(&:value)
end

retries = results.sum - hosts.size
failures = results.count { |r| r == MAX_ATTEMPTS }

puts "Prewarmed %d DNS lookups in %.2f seconds: %d retries, %d failures" % [hosts.size, elapsed, retries, failures]
